syntax = "proto3";

// for build status
package protos;
//common response objects returned by bitbucket api

// BBState is the Bitbucket State for a build status on a commit
enum BBState {
    SUCCESSFUL = 0;
    FAILED = 1;
    INPROGRESS = 2;
    STOPPED = 3;
}

// Status represents the current status of a build based on a commit
//   bb ref: https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build
message Status {
    // Id for status that is unique to the Bitbucket "build" type and the vendor; e.g. BB-DEPLOY
    string key = 1; // REQUIRED
    // refname would be the branch; from bitbucket api docs:
    //     The name of the ref that pointed to this commit at the time the status object was created.
    //     Note that this the ref may since have moved off of the commit. This optional field can be useful for
    //     build systems whose build triggers and configuration are branch-dependent (e.g. a Pipeline build).
    //     It is legitimate for this field to not be set, or even apply (e.g. a static linting job).
    string refname = 2;
    // url that would link back to ocelot for a detailed description
    string url = 3; //REQUIRED
    // state will be the string representation of BBState; will need to call (*BBState).String() and implement here
    string state = 4; //REQUIRED
    // name is the identifier for the build; OCELOT-<ACCT>-<REPO>-<BUILDID> maybe?
    string name = 5; // REQUIRED
    // description of the build
    string description = 6;
    //could add created_on & updated_on as well, don't see it as necessary rn
}