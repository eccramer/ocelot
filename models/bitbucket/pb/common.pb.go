// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LinkUrl struct {
	Href                 string   `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkUrl) Reset()         { *m = LinkUrl{} }
func (m *LinkUrl) String() string { return proto.CompactTextString(m) }
func (*LinkUrl) ProtoMessage()    {}
func (*LinkUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_904aa5bafad86cd5, []int{0}
}
func (m *LinkUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUrl.Unmarshal(m, b)
}
func (m *LinkUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUrl.Marshal(b, m, deterministic)
}
func (dst *LinkUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUrl.Merge(dst, src)
}
func (m *LinkUrl) XXX_Size() int {
	return xxx_messageInfo_LinkUrl.Size(m)
}
func (m *LinkUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUrl.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUrl proto.InternalMessageInfo

func (m *LinkUrl) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

type LinkAndName struct {
	Href                 string   `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkAndName) Reset()         { *m = LinkAndName{} }
func (m *LinkAndName) String() string { return proto.CompactTextString(m) }
func (*LinkAndName) ProtoMessage()    {}
func (*LinkAndName) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_904aa5bafad86cd5, []int{1}
}
func (m *LinkAndName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkAndName.Unmarshal(m, b)
}
func (m *LinkAndName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkAndName.Marshal(b, m, deterministic)
}
func (dst *LinkAndName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkAndName.Merge(dst, src)
}
func (m *LinkAndName) XXX_Size() int {
	return xxx_messageInfo_LinkAndName.Size(m)
}
func (m *LinkAndName) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkAndName.DiscardUnknown(m)
}

var xxx_messageInfo_LinkAndName proto.InternalMessageInfo

func (m *LinkAndName) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *LinkAndName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Links struct {
	Self                 *LinkUrl `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Html                 *LinkUrl `protobuf:"bytes,2,opt,name=html" json:"html,omitempty"`
	Avatar               *LinkUrl `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Commits              *LinkUrl `protobuf:"bytes,4,opt,name=commits" json:"commits,omitempty"`
	Comments             *LinkUrl `protobuf:"bytes,5,opt,name=comments" json:"comments,omitempty"`
	Statuses             *LinkUrl `protobuf:"bytes,6,opt,name=statuses" json:"statuses,omitempty"`
	Approve              *LinkUrl `protobuf:"bytes,7,opt,name=approve" json:"approve,omitempty"`
	Decline              *LinkUrl `protobuf:"bytes,8,opt,name=decline" json:"decline,omitempty"`
	Merge                *LinkUrl `protobuf:"bytes,9,opt,name=merge" json:"merge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Links) Reset()         { *m = Links{} }
func (m *Links) String() string { return proto.CompactTextString(m) }
func (*Links) ProtoMessage()    {}
func (*Links) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_904aa5bafad86cd5, []int{2}
}
func (m *Links) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Links.Unmarshal(m, b)
}
func (m *Links) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Links.Marshal(b, m, deterministic)
}
func (dst *Links) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Links.Merge(dst, src)
}
func (m *Links) XXX_Size() int {
	return xxx_messageInfo_Links.Size(m)
}
func (m *Links) XXX_DiscardUnknown() {
	xxx_messageInfo_Links.DiscardUnknown(m)
}

var xxx_messageInfo_Links proto.InternalMessageInfo

func (m *Links) GetSelf() *LinkUrl {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *Links) GetHtml() *LinkUrl {
	if m != nil {
		return m.Html
	}
	return nil
}

func (m *Links) GetAvatar() *LinkUrl {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Links) GetCommits() *LinkUrl {
	if m != nil {
		return m.Commits
	}
	return nil
}

func (m *Links) GetComments() *LinkUrl {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Links) GetStatuses() *LinkUrl {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *Links) GetApprove() *LinkUrl {
	if m != nil {
		return m.Approve
	}
	return nil
}

func (m *Links) GetDecline() *LinkUrl {
	if m != nil {
		return m.Decline
	}
	return nil
}

func (m *Links) GetMerge() *LinkUrl {
	if m != nil {
		return m.Merge
	}
	return nil
}

func init() {
	proto.RegisterType((*LinkUrl)(nil), "protos.LinkUrl")
	proto.RegisterType((*LinkAndName)(nil), "protos.LinkAndName")
	proto.RegisterType((*Links)(nil), "protos.Links")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_904aa5bafad86cd5) }

var fileDescriptor_common_904aa5bafad86cd5 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0x87, 0x69, 0xdd, 0x3f, 0xed, 0x54, 0x10, 0xe6, 0x34, 0x17, 0x41, 0x56, 0x44, 0x45, 0xe8,
	0x41, 0xf1, 0x01, 0xbc, 0x8b, 0x87, 0x82, 0x0f, 0x10, 0xdb, 0xd1, 0x2e, 0x6e, 0x92, 0x25, 0x13,
	0xfb, 0xf4, 0x1e, 0x64, 0x36, 0xbb, 0x9e, 0xb2, 0xa7, 0xfc, 0x98, 0xef, 0x9b, 0xcc, 0x84, 0xc0,
	0xf9, 0xde, 0x5b, 0xeb, 0xdd, 0xb6, 0x0f, 0x3e, 0x7a, 0xac, 0x86, 0x43, 0x9a, 0x4b, 0xa8, 0x5f,
	0x5b, 0xf7, 0xfd, 0x1e, 0x3a, 0x44, 0x28, 0x8e, 0x81, 0x3f, 0x69, 0x71, 0xb5, 0xb8, 0x5b, 0xef,
	0x86, 0xdc, 0x3c, 0xc3, 0x46, 0xf1, 0x8b, 0x3b, 0xbc, 0x19, 0xcb, 0x39, 0x45, 0x6b, 0xce, 0x58,
	0xa6, 0x65, 0xaa, 0x69, 0x6e, 0x7e, 0x97, 0x50, 0x6a, 0x9f, 0xe0, 0x35, 0x14, 0xc2, 0x5d, 0xea,
	0xd8, 0x3c, 0x5e, 0xa4, 0xe9, 0xb2, 0x1d, 0x67, 0xee, 0x06, 0xa8, 0xd2, 0x31, 0xda, 0x6e, 0xb8,
	0x22, 0x27, 0x29, 0xc4, 0x5b, 0xa8, 0xcc, 0xc9, 0x44, 0x13, 0xe8, 0x2c, 0xaf, 0x8d, 0x18, 0xef,
	0xa1, 0xd6, 0xa7, 0xb6, 0x51, 0xa8, 0xc8, 0x9b, 0x13, 0xc7, 0x07, 0x58, 0x69, 0x64, 0x17, 0x85,
	0xca, 0xbc, 0xfb, 0x2f, 0xa8, 0x2c, 0xd1, 0xc4, 0x1f, 0x61, 0xa1, 0x6a, 0x46, 0x9e, 0x04, 0x5d,
	0xc2, 0xf4, 0x7d, 0xf0, 0x27, 0xa6, 0x7a, 0x66, 0x89, 0x91, 0xab, 0x7a, 0xe0, 0x7d, 0xd7, 0x3a,
	0xa6, 0xd5, 0x8c, 0x3a, 0x72, 0xbc, 0x81, 0xd2, 0x72, 0xf8, 0x62, 0x5a, 0xe7, 0xc5, 0x44, 0x3f,
	0xd2, 0xe7, 0x3e, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x15, 0x9c, 0xf3, 0xbf, 0xf3, 0x01, 0x00,
	0x00,
}
