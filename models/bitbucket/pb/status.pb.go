// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// BBState is the Bitbucket State for a build status on a commit
type BBState int32

const (
	BBState_SUCCESSFUL BBState = 0
	BBState_FAILED     BBState = 1
	BBState_INPROGRESS BBState = 2
	BBState_STOPPED    BBState = 3
)

var BBState_name = map[int32]string{
	0: "SUCCESSFUL",
	1: "FAILED",
	2: "INPROGRESS",
	3: "STOPPED",
}
var BBState_value = map[string]int32{
	"SUCCESSFUL": 0,
	"FAILED":     1,
	"INPROGRESS": 2,
	"STOPPED":    3,
}

func (x BBState) String() string {
	return proto.EnumName(BBState_name, int32(x))
}
func (BBState) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

// Status represents the current status of a build based on a commit
type Status struct {
	// Id for status that is unique to the Bitbucket "build" type and the vendor; e.g. BB-DEPLOY
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// refname would be the branch; from bitbucket api docs:
	//     The name of the ref that pointed to this commit at the time the status object was created.
	//     Note that this the ref may since have moved off of the commit. This optional field can be useful for
	//     build systems whose build triggers and configuration are branch-dependent (e.g. a Pipeline build).
	//     It is legitimate for this field to not be set, or even apply (e.g. a static linting job).
	Refname string `protobuf:"bytes,2,opt,name=refname" json:"refname,omitempty"`
	// url that would link back to ocelot for a detailed description
	Url string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// state will be the string representation of BBState; will need to call (*BBState).String() and implement here
	State string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	// name is the identifier for the build; OCELOT-<ACCT>-<REPO>-<BUILDID> maybe?
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// description of the build
	Description string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Status) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Status) GetRefname() string {
	if m != nil {
		return m.Refname
	}
	return ""
}

func (m *Status) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Status) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Status) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Status) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "protos.Status")
	proto.RegisterEnum("protos.BBState", BBState_name, BBState_value)
}

func init() { proto.RegisterFile("status.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x49, 0x2c,
	0x29, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0x93, 0x18,
	0xb9, 0xd8, 0x82, 0xc1, 0x12, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x04, 0x17, 0x7b, 0x51, 0x6a, 0x5a, 0x5e, 0x62, 0x6e, 0xaa,
	0x04, 0x13, 0x58, 0x14, 0xc6, 0x05, 0xa9, 0x2d, 0x2d, 0xca, 0x91, 0x60, 0x86, 0xa8, 0x2d, 0x2d,
	0xca, 0x11, 0x12, 0xe1, 0x62, 0x05, 0x59, 0x90, 0x2a, 0xc1, 0x02, 0x16, 0x83, 0x70, 0x84, 0x84,
	0xb8, 0x58, 0xc0, 0xda, 0x59, 0xc1, 0x82, 0x60, 0xb6, 0x90, 0x02, 0x17, 0x77, 0x4a, 0x6a, 0x71,
	0x72, 0x51, 0x66, 0x41, 0x49, 0x66, 0x7e, 0x9e, 0x04, 0x1b, 0x58, 0x0a, 0x59, 0x48, 0xcb, 0x89,
	0x8b, 0xdd, 0xc9, 0x29, 0x18, 0x6c, 0x00, 0x1f, 0x17, 0x57, 0x70, 0xa8, 0xb3, 0xb3, 0x6b, 0x70,
	0xb0, 0x5b, 0xa8, 0x8f, 0x00, 0x83, 0x10, 0x17, 0x17, 0x9b, 0x9b, 0xa3, 0xa7, 0x8f, 0xab, 0x8b,
	0x00, 0x23, 0x48, 0xce, 0xd3, 0x2f, 0x20, 0xc8, 0xdf, 0x3d, 0xc8, 0x35, 0x38, 0x58, 0x80, 0x49,
	0x88, 0x9b, 0x8b, 0x3d, 0x38, 0xc4, 0x3f, 0x20, 0xc0, 0xd5, 0x45, 0x80, 0x39, 0x09, 0xe2, 0x41,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0x39, 0xfd, 0x95, 0xf7, 0x00, 0x00, 0x00,
}
