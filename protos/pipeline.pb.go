// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PipelineIntegrationConfig struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Config:
	//	*PipelineIntegrationConfig_Bitbucket
	//	*PipelineIntegrationConfig_Github
	//	*PipelineIntegrationConfig_Aws
	//	*PipelineIntegrationConfig_Nexus
	Config isPipelineIntegrationConfig_Config `protobuf_oneof:"config"`
}

func (m *PipelineIntegrationConfig) Reset()                    { *m = PipelineIntegrationConfig{} }
func (m *PipelineIntegrationConfig) String() string            { return proto.CompactTextString(m) }
func (*PipelineIntegrationConfig) ProtoMessage()               {}
func (*PipelineIntegrationConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type isPipelineIntegrationConfig_Config interface {
	isPipelineIntegrationConfig_Config()
}

type PipelineIntegrationConfig_Bitbucket struct {
	Bitbucket *BitbucketAccessConfig `protobuf:"bytes,4,opt,name=bitbucket,oneof"`
}
type PipelineIntegrationConfig_Github struct {
	Github *GithubAccessConfig `protobuf:"bytes,5,opt,name=github,oneof"`
}
type PipelineIntegrationConfig_Aws struct {
	Aws *AWSAccessConfig `protobuf:"bytes,6,opt,name=aws,oneof"`
}
type PipelineIntegrationConfig_Nexus struct {
	Nexus *NexusAccessConfig `protobuf:"bytes,7,opt,name=nexus,oneof"`
}

func (*PipelineIntegrationConfig_Bitbucket) isPipelineIntegrationConfig_Config() {}
func (*PipelineIntegrationConfig_Github) isPipelineIntegrationConfig_Config()    {}
func (*PipelineIntegrationConfig_Aws) isPipelineIntegrationConfig_Config()       {}
func (*PipelineIntegrationConfig_Nexus) isPipelineIntegrationConfig_Config()     {}

func (m *PipelineIntegrationConfig) GetConfig() isPipelineIntegrationConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *PipelineIntegrationConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineIntegrationConfig) GetBitbucket() *BitbucketAccessConfig {
	if x, ok := m.GetConfig().(*PipelineIntegrationConfig_Bitbucket); ok {
		return x.Bitbucket
	}
	return nil
}

func (m *PipelineIntegrationConfig) GetGithub() *GithubAccessConfig {
	if x, ok := m.GetConfig().(*PipelineIntegrationConfig_Github); ok {
		return x.Github
	}
	return nil
}

func (m *PipelineIntegrationConfig) GetAws() *AWSAccessConfig {
	if x, ok := m.GetConfig().(*PipelineIntegrationConfig_Aws); ok {
		return x.Aws
	}
	return nil
}

func (m *PipelineIntegrationConfig) GetNexus() *NexusAccessConfig {
	if x, ok := m.GetConfig().(*PipelineIntegrationConfig_Nexus); ok {
		return x.Nexus
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PipelineIntegrationConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PipelineIntegrationConfig_OneofMarshaler, _PipelineIntegrationConfig_OneofUnmarshaler, _PipelineIntegrationConfig_OneofSizer, []interface{}{
		(*PipelineIntegrationConfig_Bitbucket)(nil),
		(*PipelineIntegrationConfig_Github)(nil),
		(*PipelineIntegrationConfig_Aws)(nil),
		(*PipelineIntegrationConfig_Nexus)(nil),
	}
}

func _PipelineIntegrationConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PipelineIntegrationConfig)
	// config
	switch x := m.Config.(type) {
	case *PipelineIntegrationConfig_Bitbucket:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bitbucket); err != nil {
			return err
		}
	case *PipelineIntegrationConfig_Github:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Github); err != nil {
			return err
		}
	case *PipelineIntegrationConfig_Aws:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aws); err != nil {
			return err
		}
	case *PipelineIntegrationConfig_Nexus:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nexus); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PipelineIntegrationConfig.Config has unexpected type %T", x)
	}
	return nil
}

func _PipelineIntegrationConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PipelineIntegrationConfig)
	switch tag {
	case 4: // config.bitbucket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BitbucketAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &PipelineIntegrationConfig_Bitbucket{msg}
		return true, err
	case 5: // config.github
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GithubAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &PipelineIntegrationConfig_Github{msg}
		return true, err
	case 6: // config.aws
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &PipelineIntegrationConfig_Aws{msg}
		return true, err
	case 7: // config.nexus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NexusAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &PipelineIntegrationConfig_Nexus{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PipelineIntegrationConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PipelineIntegrationConfig)
	// config
	switch x := m.Config.(type) {
	case *PipelineIntegrationConfig_Bitbucket:
		s := proto.Size(x.Bitbucket)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PipelineIntegrationConfig_Github:
		s := proto.Size(x.Github)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PipelineIntegrationConfig_Aws:
		s := proto.Size(x.Aws)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PipelineIntegrationConfig_Nexus:
		s := proto.Size(x.Nexus)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PipelineInputConfig struct {
	From        string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	Integration string `protobuf:"bytes,2,opt,name=integration" json:"integration,omitempty"`
	Link        bool   `protobuf:"varint,3,opt,name=link" json:"link,omitempty"`
}

func (m *PipelineInputConfig) Reset()                    { *m = PipelineInputConfig{} }
func (m *PipelineInputConfig) String() string            { return proto.CompactTextString(m) }
func (*PipelineInputConfig) ProtoMessage()               {}
func (*PipelineInputConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PipelineInputConfig) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PipelineInputConfig) GetIntegration() string {
	if m != nil {
		return m.Integration
	}
	return ""
}

func (m *PipelineInputConfig) GetLink() bool {
	if m != nil {
		return m.Link
	}
	return false
}

type PipelineOutputConfig struct {
	To          string `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	From        string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	Integration string `protobuf:"bytes,3,opt,name=integration" json:"integration,omitempty"`
}

func (m *PipelineOutputConfig) Reset()                    { *m = PipelineOutputConfig{} }
func (m *PipelineOutputConfig) String() string            { return proto.CompactTextString(m) }
func (*PipelineOutputConfig) ProtoMessage()               {}
func (*PipelineOutputConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *PipelineOutputConfig) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *PipelineOutputConfig) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PipelineOutputConfig) GetIntegration() string {
	if m != nil {
		return m.Integration
	}
	return ""
}

type JobConfig struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PipelineId string            `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId" json:"pipeline_id,omitempty"`
	Workdir    string            `protobuf:"bytes,3,opt,name=workdir" json:"workdir,omitempty"`
	Command    string            `protobuf:"bytes,4,opt,name=command" json:"command,omitempty"`
	Image      string            `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Env        map[string]string `protobuf:"bytes,6,rep,name=env" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Inputs     []string          `protobuf:"bytes,7,rep,name=inputs" json:"inputs,omitempty"`
	Outputs    []string          `protobuf:"bytes,8,rep,name=outputs" json:"outputs,omitempty"`
}

func (m *JobConfig) Reset()                    { *m = JobConfig{} }
func (m *JobConfig) String() string            { return proto.CompactTextString(m) }
func (*JobConfig) ProtoMessage()               {}
func (*JobConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *JobConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobConfig) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *JobConfig) GetWorkdir() string {
	if m != nil {
		return m.Workdir
	}
	return ""
}

func (m *JobConfig) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *JobConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *JobConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *JobConfig) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *JobConfig) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type JobConfigList struct {
	Results []*JobConfig `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *JobConfigList) Reset()                    { *m = JobConfigList{} }
func (m *JobConfigList) String() string            { return proto.CompactTextString(m) }
func (*JobConfigList) ProtoMessage()               {}
func (*JobConfigList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *JobConfigList) GetResults() []*JobConfig {
	if m != nil {
		return m.Results
	}
	return nil
}

type PipelineConfig struct {
	Id           string                                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Inputs       map[string]*PipelineInputConfig       `protobuf:"bytes,2,rep,name=inputs" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Outputs      map[string]*PipelineOutputConfig      `protobuf:"bytes,3,rep,name=outputs" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Steps        map[string]*JobConfig                 `protobuf:"bytes,4,rep,name=steps" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	GlobalEnv    map[string]string                     `protobuf:"bytes,5,rep,name=global_env,json=globalEnv" json:"global_env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Integrations map[string]*PipelineIntegrationConfig `protobuf:"bytes,6,rep,name=integrations" json:"integrations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PipelineConfig) Reset()                    { *m = PipelineConfig{} }
func (m *PipelineConfig) String() string            { return proto.CompactTextString(m) }
func (*PipelineConfig) ProtoMessage()               {}
func (*PipelineConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *PipelineConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipelineConfig) GetInputs() map[string]*PipelineInputConfig {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *PipelineConfig) GetOutputs() map[string]*PipelineOutputConfig {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *PipelineConfig) GetSteps() map[string]*JobConfig {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *PipelineConfig) GetGlobalEnv() map[string]string {
	if m != nil {
		return m.GlobalEnv
	}
	return nil
}

func (m *PipelineConfig) GetIntegrations() map[string]*PipelineIntegrationConfig {
	if m != nil {
		return m.Integrations
	}
	return nil
}

type PipelineConfigList struct {
	Results []*PipelineConfig `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *PipelineConfigList) Reset()                    { *m = PipelineConfigList{} }
func (m *PipelineConfigList) String() string            { return proto.CompactTextString(m) }
func (*PipelineConfigList) ProtoMessage()               {}
func (*PipelineConfigList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *PipelineConfigList) GetResults() []*PipelineConfig {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*PipelineIntegrationConfig)(nil), "protos.PipelineIntegrationConfig")
	proto.RegisterType((*PipelineInputConfig)(nil), "protos.PipelineInputConfig")
	proto.RegisterType((*PipelineOutputConfig)(nil), "protos.PipelineOutputConfig")
	proto.RegisterType((*JobConfig)(nil), "protos.JobConfig")
	proto.RegisterType((*JobConfigList)(nil), "protos.JobConfigList")
	proto.RegisterType((*PipelineConfig)(nil), "protos.PipelineConfig")
	proto.RegisterType((*PipelineConfigList)(nil), "protos.PipelineConfigList")
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0xa5, 0xc9, 0x9a, 0x35, 0xb7, 0xa3, 0x62, 0x66, 0x1a, 0x59, 0x01, 0xd1, 0x05, 0x21, 0x2a,
	0x0d, 0x55, 0x6c, 0x20, 0x86, 0xa6, 0xed, 0x61, 0x83, 0x31, 0x06, 0x13, 0xa0, 0x4c, 0x02, 0x1e,
	0x90, 0xa6, 0xa4, 0xf5, 0x8a, 0xd5, 0x36, 0xae, 0x62, 0x67, 0x63, 0x9f, 0xc0, 0x0b, 0x9f, 0xc0,
	0xb7, 0x22, 0xdb, 0x71, 0xe3, 0xa4, 0xcd, 0x03, 0x4f, 0xf1, 0xb5, 0xcf, 0x39, 0xd7, 0x3e, 0xf7,
	0x5e, 0x05, 0x5a, 0x53, 0x32, 0xc5, 0x63, 0x12, 0xe3, 0xde, 0x34, 0xa1, 0x9c, 0x22, 0x47, 0x7e,
	0x58, 0x7b, 0x95, 0xc4, 0x1c, 0x0f, 0x93, 0x90, 0x13, 0x1a, 0xab, 0x23, 0xff, 0x8f, 0x05, 0x1b,
	0x5f, 0x32, 0xf4, 0x69, 0x7e, 0xfa, 0x86, 0xc6, 0x97, 0x64, 0x88, 0x10, 0x2c, 0xc5, 0xe1, 0x04,
	0x7b, 0xb5, 0x4e, 0xad, 0xeb, 0x06, 0x72, 0x8d, 0x0e, 0xc0, 0x8d, 0x08, 0x8f, 0xd2, 0xfe, 0x08,
	0x73, 0x6f, 0xa9, 0x53, 0xeb, 0x36, 0x77, 0x1e, 0x2a, 0x31, 0xd6, 0x3b, 0xd2, 0x07, 0x87, 0xfd,
	0x3e, 0x66, 0x4c, 0xa9, 0xbc, 0xbf, 0x15, 0xe4, 0x0c, 0xf4, 0x12, 0x9c, 0x21, 0xe1, 0x3f, 0xd3,
	0xc8, 0xab, 0x4b, 0x6e, 0x5b, 0x73, 0x4f, 0xe4, 0x6e, 0x89, 0x98, 0x61, 0xd1, 0x16, 0xd8, 0xe1,
	0x35, 0xf3, 0x1c, 0x49, 0xb9, 0xa7, 0x29, 0x87, 0xdf, 0xce, 0x4b, 0x78, 0x81, 0x42, 0xdb, 0x50,
	0x8f, 0xf1, 0xaf, 0x94, 0x79, 0xcb, 0x12, 0xbe, 0xa1, 0xe1, 0x9f, 0xc4, 0x66, 0x89, 0xa0, 0x90,
	0x47, 0x0d, 0x70, 0xfa, 0x72, 0xcb, 0xbf, 0x80, 0xbb, 0xb9, 0x1f, 0xd3, 0x94, 0xe7, 0x4e, 0x5c,
	0x26, 0x74, 0xa2, 0x9d, 0x10, 0x6b, 0xd4, 0x81, 0xa6, 0x61, 0xa8, 0x67, 0xc9, 0x23, 0x73, 0x4b,
	0xb0, 0xc6, 0x24, 0x1e, 0x79, 0x76, 0xa7, 0xd6, 0x6d, 0x04, 0x72, 0xed, 0xff, 0x80, 0x35, 0x9d,
	0xe0, 0x73, 0xca, 0xf3, 0x0c, 0x2d, 0xb0, 0x38, 0xcd, 0xf4, 0x2d, 0x4e, 0x67, 0x19, 0xad, 0xea,
	0x8c, 0xf6, 0x5c, 0x46, 0xff, 0xaf, 0x05, 0xee, 0x07, 0x1a, 0xe5, 0x9a, 0x64, 0xa0, 0x35, 0xc9,
	0x00, 0x3d, 0x82, 0xa6, 0x6e, 0x8d, 0x0b, 0x32, 0xc8, 0xa4, 0x41, 0x6f, 0x9d, 0x0e, 0x90, 0x07,
	0xcb, 0xd7, 0x34, 0x19, 0x0d, 0x48, 0x92, 0x89, 0xeb, 0x50, 0x9c, 0xf4, 0xe9, 0x64, 0x12, 0xc6,
	0x03, 0x59, 0x74, 0x37, 0xd0, 0x21, 0x5a, 0x83, 0x3a, 0x99, 0x84, 0x43, 0x2c, 0x0b, 0xea, 0x06,
	0x2a, 0x40, 0xcf, 0xc0, 0xc6, 0xf1, 0x95, 0xe7, 0x74, 0x6c, 0xb3, 0xc8, 0xb3, 0xab, 0xf5, 0x8e,
	0xe3, 0xab, 0xe3, 0x98, 0x27, 0x37, 0x81, 0x80, 0xa1, 0x75, 0x70, 0x88, 0x70, 0x5b, 0xd4, 0xcc,
	0xee, 0xba, 0x41, 0x16, 0x89, 0xac, 0x54, 0x9a, 0xc4, 0xbc, 0x86, 0x3c, 0xd0, 0x61, 0xfb, 0x15,
	0x34, 0xb4, 0x04, 0xba, 0x03, 0xf6, 0x08, 0xdf, 0x64, 0xef, 0x14, 0x4b, 0x71, 0xa7, 0xab, 0x70,
	0x9c, 0xe2, 0xec, 0x89, 0x2a, 0xd8, 0xb3, 0x5e, 0xd7, 0xfc, 0x7d, 0xb8, 0x3d, 0xbb, 0xc4, 0x19,
	0x61, 0x1c, 0x6d, 0xc1, 0x72, 0x82, 0x59, 0x3a, 0xe6, 0xcc, 0xab, 0xc9, 0xcb, 0xae, 0xce, 0x5d,
	0x36, 0xd0, 0x08, 0xff, 0xb7, 0x03, 0x2d, 0x5d, 0xbd, 0x0a, 0x8f, 0xf7, 0x66, 0x4f, 0xb1, 0xa4,
	0x9c, 0xaf, 0xe5, 0x8a, 0xbc, 0x9e, 0xec, 0x2e, 0xa6, 0x3c, 0xd0, 0xcf, 0x3d, 0xc8, 0x9f, 0x6b,
	0x4b, 0xf2, 0xe3, 0x0a, 0xb2, 0xea, 0x9c, 0x8c, 0xad, 0x39, 0x68, 0x17, 0xea, 0x8c, 0xe3, 0x29,
	0xf3, 0x96, 0x24, 0x79, 0xb3, 0x82, 0x7c, 0x2e, 0x30, 0x8a, 0xaa, 0xf0, 0xe8, 0x2d, 0xc0, 0x70,
	0x4c, 0xa3, 0x70, 0x7c, 0x21, 0x6a, 0x56, 0x97, 0xec, 0x27, 0x15, 0xec, 0x13, 0x09, 0x9c, 0x95,
	0xcf, 0x1d, 0xea, 0x18, 0x9d, 0xc1, 0x8a, 0xd1, 0x8a, 0x2c, 0xab, 0x7d, 0xb7, 0xf2, 0xfd, 0x39,
	0x54, 0x49, 0x15, 0xd8, 0xed, 0xaf, 0xd0, 0x34, 0x2c, 0x5a, 0x50, 0xe3, 0x6d, 0xb3, 0xc6, 0xcd,
	0x9d, 0xfb, 0xe5, 0x3c, 0xc6, 0xf8, 0x1a, 0x0d, 0xd0, 0xfe, 0x0e, 0x2b, 0xa6, 0x7b, 0x0b, 0x84,
	0x77, 0x8a, 0xc2, 0x0f, 0xca, 0xc2, 0xe6, 0xd8, 0x9a, 0xca, 0x1f, 0x01, 0x72, 0x6b, 0x17, 0xe8,
	0x3e, 0x2d, 0xea, 0x2e, 0xe8, 0x33, 0x43, 0x6c, 0x1f, 0x5a, 0x45, 0xa7, 0xff, 0xa7, 0xcb, 0xdb,
	0x11, 0xac, 0xce, 0xf9, 0xbb, 0x40, 0x60, 0xb7, 0x78, 0xa3, 0xcd, 0x79, 0x0b, 0x4b, 0x7f, 0x04,
	0x73, 0x92, 0xde, 0x01, 0x2a, 0x96, 0x54, 0x8e, 0xd3, 0xf3, 0xf2, 0x38, 0xad, 0x2f, 0xae, 0xff,
	0x6c, 0xa6, 0x22, 0xf5, 0x77, 0x7a, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xe0, 0xbf, 0xd1,
	0xb6, 0x06, 0x00, 0x00,
}
