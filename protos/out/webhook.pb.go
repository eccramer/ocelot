// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webhook.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// https://confluence.atlassian.com/bitbucket/event-payloads-740262817.html#EventPayloads-Push
type RepoPush struct {
	Actor      *Owner               `protobuf:"bytes,1,opt,name=actor" json:"actor,omitempty"`
	Repository *Repository          `protobuf:"bytes,2,opt,name=repository" json:"repository,omitempty"`
	Push       *RepoPush_PushDetail `protobuf:"bytes,3,opt,name=push" json:"push,omitempty"`
}

func (m *RepoPush) Reset()                    { *m = RepoPush{} }
func (m *RepoPush) String() string            { return proto.CompactTextString(m) }
func (*RepoPush) ProtoMessage()               {}
func (*RepoPush) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *RepoPush) GetActor() *Owner {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *RepoPush) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *RepoPush) GetPush() *RepoPush_PushDetail {
	if m != nil {
		return m.Push
	}
	return nil
}

type RepoPush_PushDetail struct {
	Changes []*Changeset `protobuf:"bytes,1,rep,name=changes" json:"changes,omitempty"`
}

func (m *RepoPush_PushDetail) Reset()                    { *m = RepoPush_PushDetail{} }
func (m *RepoPush_PushDetail) String() string            { return proto.CompactTextString(m) }
func (*RepoPush_PushDetail) ProtoMessage()               {}
func (*RepoPush_PushDetail) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 0} }

func (m *RepoPush_PushDetail) GetChanges() []*Changeset {
	if m != nil {
		return m.Changes
	}
	return nil
}

type CreateWebhook struct {
	Description string   `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Url         string   `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Active      bool     `protobuf:"varint,3,opt,name=active" json:"active,omitempty"`
	Events      []string `protobuf:"bytes,4,rep,name=events" json:"events,omitempty"`
}

func (m *CreateWebhook) Reset()                    { *m = CreateWebhook{} }
func (m *CreateWebhook) String() string            { return proto.CompactTextString(m) }
func (*CreateWebhook) ProtoMessage()               {}
func (*CreateWebhook) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *CreateWebhook) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateWebhook) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CreateWebhook) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *CreateWebhook) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetWebhooks struct {
	Pagelen float64     `protobuf:"fixed64,1,opt,name=pagelen" json:"pagelen,omitempty"`
	Page    float64     `protobuf:"fixed64,2,opt,name=page" json:"page,omitempty"`
	Size    float64     `protobuf:"fixed64,3,opt,name=size" json:"size,omitempty"`
	Values  []*Webhooks `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	Next    string      `protobuf:"bytes,5,opt,name=next" json:"next,omitempty"`
}

func (m *GetWebhooks) Reset()                    { *m = GetWebhooks{} }
func (m *GetWebhooks) String() string            { return proto.CompactTextString(m) }
func (*GetWebhooks) ProtoMessage()               {}
func (*GetWebhooks) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *GetWebhooks) GetPagelen() float64 {
	if m != nil {
		return m.Pagelen
	}
	return 0
}

func (m *GetWebhooks) GetPage() float64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetWebhooks) GetSize() float64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetWebhooks) GetValues() []*Webhooks {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *GetWebhooks) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

type Webhooks struct {
	Description string                     `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Links       *Links                     `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Url         string                     `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	CreatedAt   *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=createdAt,json=created_at" json:"createdAt,omitempty"`
	Active      bool                       `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
}

func (m *Webhooks) Reset()                    { *m = Webhooks{} }
func (m *Webhooks) String() string            { return proto.CompactTextString(m) }
func (*Webhooks) ProtoMessage()               {}
func (*Webhooks) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *Webhooks) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Webhooks) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Webhooks) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Webhooks) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Webhooks) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func init() {
	proto.RegisterType((*RepoPush)(nil), "protos.RepoPush")
	proto.RegisterType((*RepoPush_PushDetail)(nil), "protos.RepoPush.PushDetail")
	proto.RegisterType((*CreateWebhook)(nil), "protos.CreateWebhook")
	proto.RegisterType((*GetWebhooks)(nil), "protos.GetWebhooks")
	proto.RegisterType((*Webhooks)(nil), "protos.Webhooks")
}

func init() { proto.RegisterFile("webhook.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x8e, 0xd3, 0x40,
	0x0c, 0xd5, 0x90, 0xb6, 0xdb, 0x3a, 0x54, 0x5a, 0xe6, 0x80, 0x42, 0x39, 0x50, 0x75, 0x2f, 0x95,
	0x90, 0x52, 0xa9, 0x9c, 0xf6, 0x88, 0x16, 0x89, 0x0b, 0x12, 0xc8, 0x42, 0xe2, 0x88, 0xa6, 0x59,
	0xd3, 0x8e, 0x36, 0xcd, 0x44, 0x19, 0xa7, 0x0b, 0xfc, 0x03, 0xbf, 0xc3, 0x6f, 0xf0, 0x4b, 0x28,
	0x9e, 0x4c, 0x9b, 0xdb, 0x5e, 0x5a, 0xfb, 0xf9, 0x39, 0xcf, 0x7e, 0x63, 0x98, 0x3f, 0xd2, 0xee,
	0xe0, 0xdc, 0x43, 0x5e, 0x37, 0x8e, 0x9d, 0x9e, 0xc8, 0x9f, 0x5f, 0xbc, 0x2a, 0xdc, 0xf1, 0xe8,
	0x2a, 0x3a, 0x51, 0xc5, 0x54, 0xb1, 0x65, 0x4b, 0x3e, 0x50, 0x16, 0x6f, 0xf6, 0xce, 0xed, 0x4b,
	0xda, 0x48, 0xb6, 0x6b, 0x7f, 0x6c, 0xd8, 0x1e, 0xc9, 0xb3, 0x39, 0xd6, 0x3d, 0xe1, 0x79, 0xe8,
	0x0d, 0xd9, 0xea, 0x9f, 0x82, 0x29, 0x52, 0xed, 0xbe, 0xb4, 0xfe, 0xa0, 0x6f, 0x60, 0x6c, 0x0a,
	0x76, 0x4d, 0xa6, 0x96, 0x6a, 0x9d, 0x6e, 0xe7, 0x81, 0xe3, 0xf3, 0xcf, 0x8f, 0x15, 0x35, 0x18,
	0x6a, 0x7a, 0x0b, 0xd0, 0x50, 0xed, 0xbc, 0x65, 0xd7, 0xfc, 0xca, 0x9e, 0x09, 0x53, 0x47, 0x26,
	0x9e, 0x2b, 0x38, 0x60, 0xe9, 0x0d, 0x8c, 0xea, 0xd6, 0x1f, 0xb2, 0x44, 0xd8, 0xaf, 0x87, 0xec,
	0x4e, 0x38, 0xef, 0x7e, 0x3e, 0x10, 0x1b, 0x5b, 0xa2, 0x10, 0x17, 0xb7, 0x00, 0x17, 0x4c, 0xbf,
	0x85, 0xab, 0xe2, 0x60, 0xaa, 0x3d, 0xf9, 0x4c, 0x2d, 0x93, 0x75, 0xba, 0x7d, 0x11, 0xbf, 0x70,
	0x17, 0x60, 0x62, 0x8c, 0x8c, 0x95, 0x87, 0xf9, 0x5d, 0x43, 0x86, 0xe9, 0x5b, 0xb0, 0x4e, 0x2f,
	0x21, 0xbd, 0x27, 0x5f, 0x34, 0xb6, 0x66, 0xeb, 0x2a, 0xd9, 0x6d, 0x86, 0x43, 0x48, 0x5f, 0x43,
	0xd2, 0x36, 0xa5, 0xec, 0x32, 0xc3, 0x2e, 0xd4, 0x2f, 0x61, 0x62, 0x0a, 0xb6, 0x27, 0x92, 0x91,
	0xa7, 0xd8, 0x67, 0x1d, 0x2e, 0xa6, 0xfb, 0x6c, 0xb4, 0x4c, 0xd6, 0x33, 0xec, 0xb3, 0xd5, 0x1f,
	0x05, 0xe9, 0x47, 0xe2, 0x5e, 0xd2, 0xeb, 0x0c, 0xae, 0x6a, 0xb3, 0xa7, 0x92, 0x82, 0x9e, 0xc2,
	0x98, 0x6a, 0x0d, 0xa3, 0x2e, 0x14, 0x31, 0x85, 0x12, 0x77, 0x98, 0xb7, 0xbf, 0x83, 0x96, 0x42,
	0x89, 0xf5, 0x1a, 0x26, 0x27, 0x53, 0xb6, 0x14, 0x94, 0xd2, 0xed, 0x75, 0x5c, 0x39, 0x6a, 0x60,
	0x5f, 0xef, 0xba, 0x2b, 0xfa, 0xc9, 0xd9, 0x58, 0xc6, 0x97, 0x78, 0xf5, 0x57, 0xc1, 0xf4, 0x3c,
	0xcc, 0xd3, 0x06, 0xdc, 0xc0, 0xb8, 0xb4, 0xd5, 0x83, 0xef, 0x9f, 0xf3, 0xfc, 0xf0, 0x9f, 0x3a,
	0x10, 0x43, 0x2d, 0xba, 0x94, 0x5c, 0x5c, 0xba, 0x85, 0x59, 0x21, 0x56, 0xdf, 0xbf, 0xe7, 0x6c,
	0x24, 0xad, 0x8b, 0x3c, 0xdc, 0x5f, 0x1e, 0xef, 0x2f, 0xff, 0x1a, 0xef, 0x0f, 0xa1, 0x27, 0x7f,
	0x37, 0x3c, 0x30, 0x78, 0x3c, 0x34, 0x78, 0x17, 0x2e, 0xfc, 0xdd, 0xff, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2c, 0xd3, 0x8f, 0xa7, 0xf9, 0x02, 0x00, 0x00,
}
