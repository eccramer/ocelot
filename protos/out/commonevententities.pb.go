// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commonevententities.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// https://confluence.atlassian.com/bitbucket/event-payloads-740262817.html#EventPayloads-entity_userOwner
type Owner struct {
	Type     string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Links    *Links `protobuf:"bytes,3,opt,name=links" json:"links,omitempty"`
}

func (m *Owner) Reset()                    { *m = Owner{} }
func (m *Owner) String() string            { return proto.CompactTextString(m) }
func (*Owner) ProtoMessage()               {}
func (*Owner) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Owner) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Owner) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Owner) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

// https://confluence.atlassian.com/bitbucket/event-payloads-740262817.html#EventPayloads-entity_repositoryRepository
type Repository struct {
	Links    *Links   `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	Project  *Project `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	FullName string   `protobuf:"bytes,3,opt,name=fullName,json=full_name" json:"fullName,omitempty"`
	Website  string   `protobuf:"bytes,4,opt,name=website" json:"website,omitempty"`
	Owner    *Owner   `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
}

func (m *Repository) Reset()                    { *m = Repository{} }
func (m *Repository) String() string            { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()               {}
func (*Repository) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Repository) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Repository) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Repository) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Repository) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Repository) GetOwner() *Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

// https://confluence.atlassian.com/bitbucket/event-payloads-740262817.html#EventPayloads-entity_projectProject
type Project struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid  string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Links *Links `protobuf:"bytes,3,opt,name=links" json:"links,omitempty"`
}

func (m *Project) Reset()                    { *m = Project{} }
func (m *Project) String() string            { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()               {}
func (*Project) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Project) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

type Changeset struct {
	New     *Changeset_Head `protobuf:"bytes,1,opt,name=new" json:"new,omitempty"`
	Old     *Changeset_Head `protobuf:"bytes,2,opt,name=old" json:"old,omitempty"`
	Links   *Links          `protobuf:"bytes,3,opt,name=links" json:"links,omitempty"`
	Closed  bool            `protobuf:"varint,4,opt,name=closed" json:"closed,omitempty"`
	Created bool            `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Forced  bool            `protobuf:"varint,6,opt,name=forced" json:"forced,omitempty"`
	Commits []*Commit       `protobuf:"bytes,7,rep,name=commits" json:"commits,omitempty"`
}

func (m *Changeset) Reset()                    { *m = Changeset{} }
func (m *Changeset) String() string            { return proto.CompactTextString(m) }
func (*Changeset) ProtoMessage()               {}
func (*Changeset) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Changeset) GetNew() *Changeset_Head {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *Changeset) GetOld() *Changeset_Head {
	if m != nil {
		return m.Old
	}
	return nil
}

func (m *Changeset) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Changeset) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *Changeset) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Changeset) GetForced() bool {
	if m != nil {
		return m.Forced
	}
	return false
}

func (m *Changeset) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

type Changeset_Head struct {
	Type   string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Target *Commit `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (m *Changeset_Head) Reset()                    { *m = Changeset_Head{} }
func (m *Changeset_Head) String() string            { return proto.CompactTextString(m) }
func (*Changeset_Head) ProtoMessage()               {}
func (*Changeset_Head) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 0} }

func (m *Changeset_Head) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Changeset_Head) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Changeset_Head) GetTarget() *Commit {
	if m != nil {
		return m.Target
	}
	return nil
}

type Commit struct {
	Hash    string                     `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	Author  *Owner                     `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Date    *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=date" json:"date,omitempty"`
	// ignoring the "parents" field
	Links *Links `protobuf:"bytes,5,opt,name=links" json:"links,omitempty"`
}

func (m *Commit) Reset()                    { *m = Commit{} }
func (m *Commit) String() string            { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()               {}
func (*Commit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Commit) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Commit) GetAuthor() *Owner {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Commit) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

// bitbucket api 1.0
// https://confluence.atlassian.com/bitbucket/src-resources-296095214.html
type RepoSourceFile struct {
	Node string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *RepoSourceFile) Reset()                    { *m = RepoSourceFile{} }
func (m *RepoSourceFile) String() string            { return proto.CompactTextString(m) }
func (*RepoSourceFile) ProtoMessage()               {}
func (*RepoSourceFile) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *RepoSourceFile) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *RepoSourceFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RepoSourceFile) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Owner)(nil), "protos.Owner")
	proto.RegisterType((*Repository)(nil), "protos.Repository")
	proto.RegisterType((*Project)(nil), "protos.Project")
	proto.RegisterType((*Changeset)(nil), "protos.Changeset")
	proto.RegisterType((*Changeset_Head)(nil), "protos.Changeset.Head")
	proto.RegisterType((*Commit)(nil), "protos.Commit")
	proto.RegisterType((*RepoSourceFile)(nil), "protos.RepoSourceFile")
}

func init() { proto.RegisterFile("commonevententities.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xc7, 0xc9, 0x36, 0x4d, 0xda, 0x53, 0x5d, 0x61, 0x2e, 0x96, 0x18, 0x2f, 0x2c, 0x15, 0x25,
	0xde, 0x64, 0xa1, 0x3e, 0x82, 0x20, 0x5e, 0x2c, 0x2a, 0xa3, 0xec, 0x95, 0x20, 0xd3, 0xcc, 0x69,
	0x12, 0x4d, 0x32, 0x61, 0x66, 0x62, 0xd9, 0xd7, 0xf2, 0xca, 0xc7, 0xf0, 0x91, 0x64, 0xbe, 0x5a,
	0x5d, 0x5c, 0xd9, 0xab, 0x9e, 0xef, 0xfe, 0xe7, 0x97, 0x73, 0xe0, 0x71, 0x25, 0xfa, 0x5e, 0x0c,
	0xf8, 0x1d, 0x07, 0x8d, 0x83, 0x6e, 0x75, 0x8b, 0xaa, 0x1c, 0xa5, 0xd0, 0x82, 0x24, 0xf6, 0x47,
	0xe5, 0x0f, 0x5c, 0x89, 0x8b, 0xe6, 0x4f, 0x6b, 0x21, 0xea, 0x0e, 0x2f, 0xad, 0xb7, 0x9b, 0xf6,
	0x97, 0xba, 0xed, 0x51, 0x69, 0xd6, 0x8f, 0xae, 0x60, 0xf3, 0x19, 0xe6, 0xef, 0x0f, 0x03, 0x4a,
	0x42, 0x20, 0xd6, 0x37, 0x23, 0x66, 0xd1, 0x3a, 0x2a, 0x96, 0xd4, 0xda, 0x24, 0x87, 0xc5, 0xa4,
	0x50, 0x0e, 0xac, 0xc7, 0xec, 0xcc, 0xc6, 0x8f, 0x3e, 0x79, 0x06, 0xf3, 0xae, 0x1d, 0xbe, 0xa9,
	0x6c, 0xb6, 0x8e, 0x8a, 0xd5, 0xf6, 0xa1, 0x9b, 0xa7, 0xca, 0x2b, 0x13, 0xa4, 0x2e, 0xb7, 0xf9,
	0x19, 0x01, 0x50, 0x1c, 0x85, 0x6a, 0xb5, 0x90, 0x37, 0xa7, 0x9e, 0xe8, 0xee, 0x1e, 0xf2, 0x12,
	0xd2, 0x51, 0x8a, 0xaf, 0x58, 0x69, 0xfb, 0x9f, 0xab, 0xed, 0xa3, 0x50, 0xf6, 0xc1, 0x85, 0x69,
	0xc8, 0x93, 0x27, 0xb0, 0xd8, 0x4f, 0x5d, 0xf7, 0xce, 0xe8, 0x9b, 0x59, 0x7d, 0x4b, 0xe3, 0x7f,
	0xb1, 0x02, 0x33, 0x48, 0x0f, 0xb8, 0x53, 0xad, 0xc6, 0x2c, 0xb6, 0xb9, 0xe0, 0x1a, 0x19, 0xc2,
	0xbc, 0x39, 0x9b, 0xff, 0x2d, 0xc3, 0x82, 0xa0, 0x2e, 0xb7, 0xb9, 0x86, 0xd4, 0xff, 0x9f, 0x41,
	0x63, 0x11, 0x78, 0x34, 0x76, 0x3a, 0x81, 0x78, 0x9a, 0x5a, 0xee, 0xb1, 0x58, 0xfb, 0x7e, 0x48,
	0x7e, 0x9d, 0xc1, 0xf2, 0x75, 0xc3, 0x86, 0x1a, 0x15, 0x6a, 0x52, 0xc0, 0x6c, 0xc0, 0x83, 0xe7,
	0x71, 0x11, 0x1a, 0x8e, 0xf9, 0xf2, 0x2d, 0x32, 0x4e, 0x4d, 0x89, 0xa9, 0x14, 0x1d, 0xf7, 0x48,
	0xee, 0xac, 0x14, 0xdd, 0xfd, 0x64, 0x90, 0x0b, 0x48, 0xaa, 0x4e, 0x28, 0xe4, 0x16, 0xce, 0x82,
	0x7a, 0xcf, 0x50, 0xab, 0x24, 0x32, 0x8d, 0xdc, 0xd2, 0x59, 0xd0, 0xe0, 0x9a, 0x8e, 0xbd, 0x90,
	0x15, 0xf2, 0x2c, 0x71, 0x1d, 0xce, 0x23, 0x05, 0xa4, 0x66, 0xe5, 0x5a, 0xad, 0xb2, 0x74, 0x3d,
	0x2b, 0x56, 0xdb, 0xf3, 0xa3, 0x38, 0x1b, 0xa6, 0x21, 0x9d, 0x5f, 0x43, 0x6c, 0x54, 0xfe, 0x73,
	0xd5, 0x02, 0xe3, 0xb3, 0x3f, 0x18, 0xbf, 0x80, 0x44, 0x33, 0x59, 0xa3, 0xf6, 0x2f, 0xb9, 0x3d,
	0xd8, 0x67, 0x37, 0x3f, 0x22, 0x48, 0x5c, 0xc8, 0x8c, 0x69, 0x98, 0x6a, 0xc2, 0x68, 0x63, 0x93,
	0xe7, 0x90, 0xb0, 0x49, 0x37, 0x42, 0x7a, 0x78, 0xb7, 0xbe, 0xb7, 0x4f, 0x9a, 0x97, 0xf7, 0xa8,
	0x14, 0xab, 0xc3, 0x2e, 0x05, 0x97, 0x94, 0x10, 0x73, 0xe6, 0xd7, 0x68, 0xb5, 0xcd, 0x4b, 0x77,
	0x53, 0x65, 0xb8, 0xa9, 0xf2, 0x53, 0xb8, 0x29, 0x6a, 0xeb, 0x4e, 0x1f, 0x60, 0xfe, 0x9f, 0x3d,
	0xb8, 0x82, 0x73, 0x73, 0x19, 0x1f, 0xc5, 0x24, 0x2b, 0x7c, 0xd3, 0x76, 0x0e, 0x81, 0xe0, 0xa7,
	0x35, 0x13, 0xdc, 0xc6, 0x46, 0xa6, 0x9b, 0x80, 0xc5, 0xd8, 0x26, 0xc6, 0x99, 0x66, 0x5e, 0xa5,
	0xb5, 0x77, 0xee, 0xfa, 0x5f, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xf8, 0xb8, 0x37, 0x21,
	0x04, 0x00, 0x00,
}
