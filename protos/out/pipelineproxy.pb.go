// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipelineproxy.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import resources1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// PipelineIntegration from public import pipeline.proto
type PipelineIntegration resources1.PipelineIntegration

func (m *PipelineIntegration) Reset()         { (*resources1.PipelineIntegration)(m).Reset() }
func (m *PipelineIntegration) String() string { return (*resources1.PipelineIntegration)(m).String() }
func (*PipelineIntegration) ProtoMessage()    {}
func (m *PipelineIntegration) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) int, []interface{}) {
	return _PipelineIntegration_OneofMarshaler, _PipelineIntegration_OneofUnmarshaler, _PipelineIntegration_OneofSizer, nil
}
func _PipelineIntegration_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PipelineIntegration)
	m0 := (*resources1.PipelineIntegration)(m)
	enc, _, _, _ := m0.XXX_OneofFuncs()
	return enc(m0, b)
}
func _PipelineIntegration_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PipelineIntegration)
	m0 := (*resources1.PipelineIntegration)(m)
	_, dec, _, _ := m0.XXX_OneofFuncs()
	return dec(m0, tag, wire, b)
}
func _PipelineIntegration_OneofSizer(msg proto.Message) int {
	m := msg.(*PipelineIntegration)
	m0 := (*resources1.PipelineIntegration)(m)
	_, _, size, _ := m0.XXX_OneofFuncs()
	return size(m0)
}
func (m *PipelineIntegration) GetName() string { return (*resources1.PipelineIntegration)(m).GetName() }

// PipelineInput from public import pipeline.proto
type PipelineInput resources1.PipelineInput

func (m *PipelineInput) Reset()          { (*resources1.PipelineInput)(m).Reset() }
func (m *PipelineInput) String() string  { return (*resources1.PipelineInput)(m).String() }
func (*PipelineInput) ProtoMessage()     {}
func (m *PipelineInput) GetFrom() string { return (*resources1.PipelineInput)(m).GetFrom() }
func (m *PipelineInput) GetIntegration() string {
	return (*resources1.PipelineInput)(m).GetIntegration()
}
func (m *PipelineInput) GetLink() bool { return (*resources1.PipelineInput)(m).GetLink() }

// PipelineOutput from public import pipeline.proto
type PipelineOutput resources1.PipelineOutput

func (m *PipelineOutput) Reset()          { (*resources1.PipelineOutput)(m).Reset() }
func (m *PipelineOutput) String() string  { return (*resources1.PipelineOutput)(m).String() }
func (*PipelineOutput) ProtoMessage()     {}
func (m *PipelineOutput) GetTo() string   { return (*resources1.PipelineOutput)(m).GetTo() }
func (m *PipelineOutput) GetFrom() string { return (*resources1.PipelineOutput)(m).GetFrom() }
func (m *PipelineOutput) GetIntegration() string {
	return (*resources1.PipelineOutput)(m).GetIntegration()
}

// Job from public import pipeline.proto
type Job resources1.Job

func (m *Job) Reset()                { (*resources1.Job)(m).Reset() }
func (m *Job) String() string        { return (*resources1.Job)(m).String() }
func (*Job) ProtoMessage()           {}
func (m *Job) GetId() string         { return (*resources1.Job)(m).GetId() }
func (m *Job) GetPipelineId() string { return (*resources1.Job)(m).GetPipelineId() }
func (m *Job) GetWorkdir() string    { return (*resources1.Job)(m).GetWorkdir() }
func (m *Job) GetCommand() string    { return (*resources1.Job)(m).GetCommand() }
func (m *Job) GetImage() string      { return (*resources1.Job)(m).GetImage() }
func (m *Job) GetEnv() map[string]string {
	o := (*resources1.Job)(m).GetEnv()
	if o == nil {
		return nil
	}
	s := make(map[string]string, len(o))
	for k, v := range o {
		s[k] = (string)(v)
	}
	return s
}
func (m *Job) GetInputs() []string  { return (*resources1.Job)(m).GetInputs() }
func (m *Job) GetOutputs() []string { return (*resources1.Job)(m).GetOutputs() }

// JobsList from public import pipeline.proto
type JobsList resources1.JobsList

func (m *JobsList) Reset()         { (*resources1.JobsList)(m).Reset() }
func (m *JobsList) String() string { return (*resources1.JobsList)(m).String() }
func (*JobsList) ProtoMessage()    {}
func (m *JobsList) GetResults() []*Job {
	o := (*resources1.JobsList)(m).GetResults()
	if o == nil {
		return nil
	}
	s := make([]*Job, len(o))
	for i, x := range o {
		s[i] = (*Job)(x)
	}
	return s
}

// Pipeline from public import pipeline.proto
type Pipeline resources1.Pipeline

func (m *Pipeline) Reset()         { (*resources1.Pipeline)(m).Reset() }
func (m *Pipeline) String() string { return (*resources1.Pipeline)(m).String() }
func (*Pipeline) ProtoMessage()    {}
func (m *Pipeline) GetId() string  { return (*resources1.Pipeline)(m).GetId() }
func (m *Pipeline) GetInputs() map[string]*PipelineInput {
	o := (*resources1.Pipeline)(m).GetInputs()
	if o == nil {
		return nil
	}
	s := make(map[string]*PipelineInput, len(o))
	for k, v := range o {
		s[k] = (*PipelineInput)(v)
	}
	return s
}
func (m *Pipeline) GetOutputs() map[string]*PipelineOutput {
	o := (*resources1.Pipeline)(m).GetOutputs()
	if o == nil {
		return nil
	}
	s := make(map[string]*PipelineOutput, len(o))
	for k, v := range o {
		s[k] = (*PipelineOutput)(v)
	}
	return s
}
func (m *Pipeline) GetSteps() map[string]*Job {
	o := (*resources1.Pipeline)(m).GetSteps()
	if o == nil {
		return nil
	}
	s := make(map[string]*Job, len(o))
	for k, v := range o {
		s[k] = (*Job)(v)
	}
	return s
}
func (m *Pipeline) GetGlobalEnv() map[string]string {
	o := (*resources1.Pipeline)(m).GetGlobalEnv()
	if o == nil {
		return nil
	}
	s := make(map[string]string, len(o))
	for k, v := range o {
		s[k] = (string)(v)
	}
	return s
}
func (m *Pipeline) GetIntegrations() map[string]*PipelineIntegration {
	o := (*resources1.Pipeline)(m).GetIntegrations()
	if o == nil {
		return nil
	}
	s := make(map[string]*PipelineIntegration, len(o))
	for k, v := range o {
		s[k] = (*PipelineIntegration)(v)
	}
	return s
}

// PipelinesList from public import pipeline.proto
type PipelinesList resources1.PipelinesList

func (m *PipelinesList) Reset()         { (*resources1.PipelinesList)(m).Reset() }
func (m *PipelinesList) String() string { return (*resources1.PipelinesList)(m).String() }
func (*PipelinesList) ProtoMessage()    {}
func (m *PipelinesList) GetResults() []*Pipeline {
	o := (*resources1.PipelinesList)(m).GetResults()
	if o == nil {
		return nil
	}
	s := make([]*Pipeline, len(o))
	for i, x := range o {
		s[i] = (*Pipeline)(x)
	}
	return s
}

func init() { proto.RegisterFile("pipelineproxy.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 61 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xc8, 0x2c, 0x48,
	0xcd, 0xc9, 0xcc, 0x4b, 0x2d, 0x28, 0xca, 0xaf, 0xa8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x03, 0x53, 0xc5, 0x52, 0x7c, 0x30, 0x49, 0x88, 0x78, 0x00, 0x43, 0x12, 0x44, 0xc6, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xba, 0x43, 0x60, 0xf7, 0x37, 0x00, 0x00, 0x00,
}
