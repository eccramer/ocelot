# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.synced_folder "..", "/home/vagrant/go/src/github.com/shankj3/ocelot/", type: "rsync"

  config.vm.define "infra" do |infra|
    infra.vm.box = "ubuntu/bionic64"
    infra.vm.provider :virtualbox do |vb|
      vb.name = "infra"
      vb.memory = "2048"
    end
    # FIXME: Start with privileged: false
    infra.vm.provision "shell", inline: <<-SHELL
      cd /home/vagrant/go/src/github.com/shankj3/ocelot/deploy/infra
      docker network create ocelot
      docker-compose -f postgres-docker-compose.yml up -d
      docker-compose -f nsq-docker-compose.yml up -d
      docker-compose -f consul-docker-compose.yml up -d
      docker-compose -f vault-docker-compose.yml up -d
    SHELL
    infra.vm.network "private_network", ip: "192.168.56.78"
  end

  config.vm.define "ocelot", primary: true do |ocelot|
    ocelot.vm.box = "ubuntu/bionic64"
    ocelot.vm.provider :virtualbox do |vb|
      vb.name = "ocelot"
      vb.memory = "2048"
    end

    ocelot.vm.provision "shell", privileged: false, inline: <<-SHELL
      sudo apt-get install -y golang-go # TODO: Pin this to at least 1.10
      echo 'export GOPATH=$HOME/go' | sudo tee -a /etc/bash.bashrc
      export GOPATH=$HOME/go
      echo 'export PATH=$PATH:$GOPATH/bin' | sudo tee -a /etc/bash.bashrc
      export PATH=$PATH:$GOPATH/bin

      sudo chown -R $(id -u):$(id -g) $HOME/go

      go get -v -u github.com/golang/dep/cmd/dep && \
      go get -v -u github.com/golang/protobuf/proto && \
      go get -v -u github.com/golang/protobuf/protoc-gen-go && \
      go get -v -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway && \
      go get -v -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger && \
      go get -v -u github.com/favadi/protoc-go-inject-tag && \
      go get -v -u github.com/golang/mock/mockgen && \
      go get -v -u golang.org/x/tools/cmd/stringer && \
      go get golang.org/x/tools/cmd/cover

      echo '# Ocelot configuration:' | sudo tee -a /etc/bashrc.bashrc
      echo 'export VAULT_TOKEN=ocelotdev' | sudo tee -a /etc/bash.bashrc
      export VAULT_TOKEN=ocelotdev
      echo 'export VAULT_ADDR=http://192.168.56.78:8200' | sudo tee -a /etc/bash.bashrc
      export VAULT_ADDR=http://192.168.56.78:8200
      echo 'export CONSUL_HTTP_ADDR=http://192.168.56.78:8500' | sudo tee -a /etc/bash.bashrc
      export CONSUL_HTTP_ADDR=http://192.168.56.78:8500
      echo 'export CONSUL_HOST=192.168.56.78' | sudo tee -a /etc/bash.bashrc
      export CONSUL_HOST=192.168.56.78
      echo 'export NSQLOOKUPD_IP=192.168.56.78' | sudo tee -a /etc/bash.bashrc
      export NSQLOOKUPD_IP=192.168.56.78
      echo 'export NSQD_IP=192.168.56.78' | sudo tee -a /etc/bash.bashrc
      export NSQD_IP=192.168.56.78
      echo 'export REGISTER_IP=192.168.12.34' | sudo tee -a /etc/bash.bashrc
      export REGISTER_IP=192.168.12.34
      echo 'export LOG_LEVEL=debug' | sudo tee -a /etc/bash.bashrc
      export LOG_LEVEL=debug
      echo 'export DBHOST=192.168.56.78' | sudo tee -a /etc/bash.bashrc
      export DBHOST=192.168.56.78

      # Set up Vault to use kv version 1, for now
      # Unmount secret/
      vault secrets disable secret
      vault secrets enable -path=secret -version=1 kv

      /home/vagrant/go/src/github.com/shankj3/ocelot/scripts/setup-cv.sh

      cd /home/vagrant/go/src/github.com/shankj3/ocelot/
      make local
    SHELL
    ocelot.vm.network "private_network", ip: "192.168.12.34"
  end

  # NOTE: This outer provision block runs FIRST before inner blocks of the VMs above
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
    sudo sh /tmp/get-docker.sh
    sudo systemctl start docker
    sudo usermod -aG docker $USER

    sudo apt install -y docker-compose unzip

    # Install Consul and Vault CLI
    pushd /usr/local/bin
    sudo wget https://releases.hashicorp.com/consul/1.2.3/consul_1.2.3_linux_amd64.zip
    sudo wget https://releases.hashicorp.com/vault/0.11.1/vault_0.11.1_linux_amd64.zip
    for z in `ls *.zip`; do sudo unzip ${z}; done
    sudo rm *.zip
    popd

    vault -autocomplete-install
  SHELL

end