// Code generated by MockGen. DO NOT EDIT.
// Source: werkerteller.go

// Package build_signaler is a generated GoMock package.
package build_signaler

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/shankj3/ocelot/models"
	pb "github.com/shankj3/ocelot/models/pb"
	reflect "reflect"
)

// MockWerkerTeller is a mock of WerkerTeller interface
type MockWerkerTeller struct {
	ctrl     *gomock.Controller
	recorder *MockWerkerTellerMockRecorder
}

// MockWerkerTellerMockRecorder is the mock recorder for MockWerkerTeller
type MockWerkerTellerMockRecorder struct {
	mock *MockWerkerTeller
}

// NewMockWerkerTeller creates a new mock instance
func NewMockWerkerTeller(ctrl *gomock.Controller) *MockWerkerTeller {
	mock := &MockWerkerTeller{ctrl: ctrl}
	mock.recorder = &MockWerkerTellerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWerkerTeller) EXPECT() *MockWerkerTellerMockRecorder {
	return m.recorder
}

// TellWerker mocks base method
func (m *MockWerkerTeller) TellWerker(lastCommit string, conf *Signaler, branch string, handler models.VCSHandler, token, acctRepo string, commits []*pb.Commit, force bool, sigBy pb.SignaledBy) error {
	ret := m.ctrl.Call(m, "TellWerker", lastCommit, conf, branch, handler, token, acctRepo, commits, force, sigBy)
	ret0, _ := ret[0].(error)
	return ret0
}

// TellWerker indicates an expected call of TellWerker
func (mr *MockWerkerTellerMockRecorder) TellWerker(lastCommit, conf, branch, handler, token, acctRepo, commits, force, sigBy interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TellWerker", reflect.TypeOf((*MockWerkerTeller)(nil).TellWerker), lastCommit, conf, branch, handler, token, acctRepo, commits, force, sigBy)
}
