// Code generated by protoc-gen-go. DO NOT EDIT.
// source: guideocelot.proto

/*
Package models is a generated protocol buffer package.

It is generated from these files:
	guideocelot.proto

It has these top-level messages:
	CredWrapper
	Credentials
*/
package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CredWrapper struct {
	Credentials []*Credentials `protobuf:"bytes,1,rep,name=credentials" json:"credentials,omitempty"`
}

func (m *CredWrapper) Reset()                    { *m = CredWrapper{} }
func (m *CredWrapper) String() string            { return proto.CompactTextString(m) }
func (*CredWrapper) ProtoMessage()               {}
func (*CredWrapper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CredWrapper) GetCredentials() []*Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type Credentials struct {
	ClientId     string `protobuf:"bytes,1,opt,name=clientId" json:"clientId,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret" json:"clientSecret,omitempty"`
	TokenURL     string `protobuf:"bytes,3,opt,name=tokenURL" json:"tokenURL,omitempty"`
	AcctName     string `protobuf:"bytes,4,opt,name=acctName" json:"acctName,omitempty"`
	Type         string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *Credentials) Reset()                    { *m = Credentials{} }
func (m *Credentials) String() string            { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()               {}
func (*Credentials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Credentials) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Credentials) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Credentials) GetTokenURL() string {
	if m != nil {
		return m.TokenURL
	}
	return ""
}

func (m *Credentials) GetAcctName() string {
	if m != nil {
		return m.AcctName
	}
	return ""
}

func (m *Credentials) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*CredWrapper)(nil), "models.CredWrapper")
	proto.RegisterType((*Credentials)(nil), "models.Credentials")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GuideOcelot service

type GuideOcelotClient interface {
	GetCreds(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*CredWrapper, error)
}

type guideOcelotClient struct {
	cc *grpc.ClientConn
}

func NewGuideOcelotClient(cc *grpc.ClientConn) GuideOcelotClient {
	return &guideOcelotClient{cc}
}

func (c *guideOcelotClient) GetCreds(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*CredWrapper, error) {
	out := new(CredWrapper)
	err := grpc.Invoke(ctx, "/models.GuideOcelot/GetCreds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GuideOcelot service

type GuideOcelotServer interface {
	GetCreds(context.Context, *google_protobuf.Empty) (*CredWrapper, error)
}

func RegisterGuideOcelotServer(s *grpc.Server, srv GuideOcelotServer) {
	s.RegisterService(&_GuideOcelot_serviceDesc, srv)
}

func _GuideOcelot_GetCreds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuideOcelotServer).GetCreds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.GuideOcelot/GetCreds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuideOcelotServer).GetCreds(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GuideOcelot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.GuideOcelot",
	HandlerType: (*GuideOcelotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCreds",
			Handler:    _GuideOcelot_GetCreds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "guideocelot.proto",
}

func init() { proto.RegisterFile("guideocelot.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0x5b, 0x4b, 0xbb, 0xf1, 0xd2, 0x15, 0x64, 0x89, 0x1e, 0x4a, 0x4e, 0x3d, 0x6d,
	0xb0, 0xe2, 0x13, 0x54, 0x29, 0x8a, 0x28, 0x44, 0x44, 0x3c, 0x6e, 0x37, 0x63, 0x08, 0x26, 0xbb,
	0xcb, 0x66, 0x2a, 0xf4, 0xea, 0x2b, 0x78, 0xf2, 0xb9, 0x7c, 0x05, 0x1f, 0x44, 0x76, 0x37, 0x51,
	0x7b, 0x9b, 0x7f, 0xbe, 0x99, 0x64, 0xe7, 0x23, 0xb3, 0x72, 0x5b, 0x15, 0xa0, 0x25, 0xd4, 0x1a,
	0xb9, 0xb1, 0x1a, 0x35, 0x1d, 0x37, 0xba, 0x80, 0xba, 0x4d, 0x4e, 0x4a, 0xad, 0xcb, 0x1a, 0x32,
	0xdf, 0xdd, 0x6c, 0x5f, 0x32, 0x68, 0x0c, 0xee, 0xc2, 0x50, 0x72, 0xda, 0x41, 0x61, 0xaa, 0x4c,
	0x28, 0xa5, 0x51, 0x60, 0xa5, 0x55, 0x1b, 0x68, 0x7a, 0x49, 0xe2, 0x95, 0x85, 0xe2, 0xc9, 0x0a,
	0x63, 0xc0, 0xd2, 0x0b, 0x12, 0x4b, 0x0b, 0x05, 0x28, 0xac, 0x44, 0xdd, 0xb2, 0x68, 0x3e, 0x5c,
	0xc4, 0xcb, 0x23, 0x1e, 0xfe, 0xc3, 0x57, 0x7f, 0x28, 0xff, 0x3f, 0x97, 0x7e, 0x46, 0xe1, 0x33,
	0x5d, 0xa6, 0x09, 0x99, 0xc8, 0xba, 0x02, 0x85, 0xd7, 0x05, 0x8b, 0xe6, 0xd1, 0x62, 0x9a, 0xff,
	0x66, 0x9a, 0x92, 0xc3, 0x50, 0x3f, 0x80, 0xb4, 0x80, 0x6c, 0xe0, 0xf9, 0x5e, 0xcf, 0xed, 0xa3,
	0x7e, 0x05, 0xf5, 0x98, 0xdf, 0xb2, 0x61, 0xd8, 0xef, 0xb3, 0x63, 0x42, 0x4a, 0xbc, 0x13, 0x0d,
	0xb0, 0x51, 0x60, 0x7d, 0xa6, 0x94, 0x8c, 0x70, 0x67, 0x80, 0x1d, 0xf8, 0xbe, 0xaf, 0x97, 0xcf,
	0x24, 0x5e, 0x3b, 0x73, 0xf7, 0xde, 0x1c, 0xbd, 0x21, 0x93, 0x35, 0xa0, 0x7b, 0x6c, 0x4b, 0x8f,
	0x79, 0x70, 0xc3, 0x7b, 0x71, 0xfc, 0xca, 0x89, 0x4b, 0xf6, 0x0e, 0xee, 0xd4, 0xa4, 0xb3, 0xf7,
	0xaf, 0xef, 0x8f, 0x41, 0x4c, 0xa7, 0xd9, 0xdb, 0x59, 0xe6, 0x8e, 0x6f, 0x37, 0x63, 0xbf, 0x77,
	0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xd8, 0x0e, 0x5f, 0x9b, 0x01, 0x00, 0x00,
}
